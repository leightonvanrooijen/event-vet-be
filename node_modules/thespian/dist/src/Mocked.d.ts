import { MockedCall } from "./MockedCall";
import { MockHandler } from "./MockHandler";
import { TMocked } from "./TMocked";
import { SuccessfulCall } from "./SuccessfulCall";
import { MockedProperty } from "./MockedProperty";
export declare class Mocked<T> implements TMocked<T> {
    private mockName;
    private successfulCalls;
    private handler;
    object: any;
    constructor(mockName: string, successfulCalls: Array<SuccessfulCall>, handler?: MockHandler);
    setup<U>(f: (t: T) => U): MockedCall<U> | MockedProperty<U>;
    private setUpPropertyAccess;
    private setUpMethodCall;
    private setUpFunctionCall;
    private addMockedCall;
    verify(errors: Array<any>): void;
    describeMocks(): any[];
}
