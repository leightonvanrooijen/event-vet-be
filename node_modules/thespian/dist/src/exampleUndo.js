"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Thespian_1 = require("./Thespian");
const mismatched_1 = require("mismatched");
describe("Thespian By Example: Undo/Redo", () => {
    let thespian;
    let edit;
    let replace;
    let undoRedo;
    beforeEach(() => {
        thespian = new Thespian_1.Thespian();
        edit = thespian.mock("edit");
        replace = thespian.mock("replace");
        undoRedo = new UndoManager();
    });
    afterEach(() => thespian.verify());
    it("Add two commands and undo()", () => {
        // Given
        replace
            .setup(f => f.undo())
            .returnsVoid();
        edit
            .setup(f => f.details())
            .returns(() => "Edit");
        undoRedo.add(edit.object);
        undoRedo.add(replace.object);
        // When
        undoRedo.undo();
        // Then
        (0, mismatched_1.assertThat)(undoRedo.currentDetails()).is("Edit");
        thespian.verify();
    });
});
class UndoManager {
    constructor() {
        this.readyToUndo = [];
        this.readyToRedo = [];
    }
    add(command) {
        this.readyToUndo.push(command);
    }
    undo() {
        if (this.readyToUndo.length > 0) {
            const command = this.readyToUndo.pop();
            this.readyToRedo.push(command);
            command.undo();
        }
    }
    currentDetails() {
        if (this.readyToUndo.length > 0) {
            return this.readyToUndo[0].details();
        }
        return "None";
    }
}
//# sourceMappingURL=exampleUndo.js.map