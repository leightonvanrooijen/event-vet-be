import { ContextOfValidationError, DiffMatcher } from "./DiffMatcher";
import { Mismatched } from "./Mismatched";
import { MatchResult } from "../MatchResult";
export declare class DiffFieldMatcher<T> extends DiffMatcher<T> {
    fieldName: string | symbol;
    private matcher;
    private constructor();
    mismatches(context: ContextOfValidationError, errors: Array<Mismatched>, actual: T): MatchResult;
    describe(): any;
    isKey(): boolean;
    isBind(): boolean;
    static make<T>(fieldName: string, expected: DiffMatcher<T> | any): DiffFieldMatcher<T>;
    static makeAll<T>(obj: object): Array<DiffFieldMatcher<T>>;
}
