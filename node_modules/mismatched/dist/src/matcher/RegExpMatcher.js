"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RegExpMatcher = void 0;
const DiffMatcher_1 = require("./DiffMatcher");
const ofType_1 = require("../ofType");
const MatchResult_1 = require("../MatchResult");
const Mismatched_1 = require("./Mismatched");
class RegExpMatcher extends DiffMatcher_1.DiffMatcher {
    constructor(expected) {
        super();
        this.expected = expected;
    }
    mismatches(context, mismatched, actual) {
        if (ofType_1.ofType.isRegExp(actual) && actual.toString() === this.expected.toString()) {
            return MatchResult_1.MatchResult.good(1);
        }
        if (ofType_1.ofType.isString(actual) && actual.match(this.expected)) {
            return MatchResult_1.MatchResult.good(1);
        }
        mismatched.push(Mismatched_1.Mismatched.makeExpectedMessage(context, actual, this.describe()));
        return MatchResult_1.MatchResult.wasExpected(actual, this.describe(), 1, 0);
    }
    describe() {
        return MatchResult_1.MatchResult.describe(this.expected.toString());
    }
    static make(expected) {
        return new RegExpMatcher(expected);
    }
}
exports.RegExpMatcher = RegExpMatcher;
//# sourceMappingURL=RegExpMatcher.js.map