"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fc = require("fast-check");
const assertThat_1 = require("../assertThat");
const match_1 = require("../match");
describe("match.string property tests:", () => {
    it('always matches with the same string', () => {
        fc.assert(fc.property(fc.string(), value => (0, assertThat_1.assertThat)(value).is(value)));
    });
    it('never matches with a different string', () => {
        fc.assert(fc.property(fc.string(), value => {
            (0, assertThat_1.assertThat)(value).isNot(value + '1');
            (0, assertThat_1.assertThat)(value + '1').isNot(value);
        }));
    });
});
describe("match.startsWith/endsWith/includes property tests:", () => {
    it('always matches with the same string', () => {
        fc.assert(fc.property(fc.string(), value => {
            (0, assertThat_1.assertThat)(value).is(match_1.match.string.startsWith(value));
            (0, assertThat_1.assertThat)(value).is(match_1.match.string.endsWith(value));
            (0, assertThat_1.assertThat)(value).is(match_1.match.string.includes(value));
        }));
    });
    it('always matches with suitable string', () => {
        fc.assert(fc.property(fc.string(), value => {
            (0, assertThat_1.assertThat)(value + '1').is(match_1.match.string.startsWith(value));
            (0, assertThat_1.assertThat)('1' + value).is(match_1.match.string.endsWith(value));
            (0, assertThat_1.assertThat)('1' + value + '1').is(match_1.match.string.includes(value));
        }));
    });
    it('never matches with a different string', () => {
        fc.assert(fc.property(fc.string(), value => {
            (0, assertThat_1.assertThat)(value).isNot(match_1.match.string.startsWith('1' + value));
            (0, assertThat_1.assertThat)(value).isNot(match_1.match.string.endsWith(value) + '1');
        }));
    });
});
//# sourceMappingURL=StringMatcher.propTest.js.map