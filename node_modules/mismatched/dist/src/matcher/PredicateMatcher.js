"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PredicateMatcher = void 0;
const DiffMatcher_1 = require("./DiffMatcher");
const MatchResult_1 = require("../MatchResult");
const util_1 = require("util");
const __1 = require("..");
const Mismatched_1 = require("./Mismatched");
const PrettyPrinter_1 = require("../prettyPrint/PrettyPrinter");
class PredicateMatcher extends DiffMatcher_1.DiffMatcher {
    constructor(expected, description) {
        super();
        this.expected = expected;
        this.description = description;
        this.specificity = 2;
    }
    mismatches(context, mismatched, actual) {
        try {
            if (this.expected(actual)) {
                return MatchResult_1.MatchResult.good(1);
            }
        }
        catch (e) {
            const actualAndException = { actual, exception: (0, PrettyPrinter_1.exceptionMessage)(e) };
            mismatched.push(Mismatched_1.Mismatched.makeExpectedMessage(context, actualAndException, this.describe()));
            return MatchResult_1.MatchResult.wasExpected(actualAndException, this.describe(), 1, 0);
        }
        mismatched.push(Mismatched_1.Mismatched.makeExpectedMessage(context, actual, this.describe()));
        return MatchResult_1.MatchResult.wasExpected(actual, this.describe(), 1, 0);
    }
    describe() {
        return this.description;
    }
    static make(predicate, description = __1.PrettyPrinter.functionDetails(predicate)) {
        if (!(0, util_1.isFunction)(predicate)) {
            throw new Error("Predicate supplied must be a function");
        }
        return new PredicateMatcher(predicate, description);
    }
}
exports.PredicateMatcher = PredicateMatcher;
//# sourceMappingURL=PredicateMatcher.js.map