"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const assertThat_1 = require("../../assertThat");
const Appender_1 = require("../Appender");
const ObjectTile_1 = require("./ObjectTile");
const SimpleTile_1 = require("./SimpleTile");
describe("ObjectTile", () => {
    it("No fields", () => {
        const objectTile = new ObjectTile_1.ObjectTile([]);
        (0, assertThat_1.assertThat)(objectTile).is({ elements: [], stringLength: 2, complexity: 2 });
        (0, assertThat_1.assertThat)(Appender_1.Appender.composeLength(objectTile)).is(2);
    });
    it("One field", () => {
        const tile = new ObjectTile_1.FieldTile("a", new SimpleTile_1.SimpleTile("hello"));
        const objectTile = new ObjectTile_1.ObjectTile([tile]);
        (0, assertThat_1.assertThat)(Appender_1.Appender.composeLength(objectTile)).is(10);
        (0, assertThat_1.assertThat)(objectTile).is({ elements: [tile], stringLength: 10, complexity: 4 });
    });
    it("Three fields", () => {
        const tile1 = new ObjectTile_1.FieldTile("a", new SimpleTile_1.SimpleTile("hello"));
        const tile2 = new ObjectTile_1.FieldTile("bb", new SimpleTile_1.SimpleTile(12));
        const tile3 = new ObjectTile_1.FieldTile("cccc", new SimpleTile_1.SimpleTile(true));
        const objectTile = new ObjectTile_1.ObjectTile([tile1, tile2, tile3]);
        (0, assertThat_1.assertThat)(Appender_1.Appender.composeLength(objectTile)).is(30);
        (0, assertThat_1.assertThat)(objectTile).is({ elements: [tile1, tile2, tile3], stringLength: 30, complexity: 8 });
    });
});
//# sourceMappingURL=ObjectTile.micro.js.map