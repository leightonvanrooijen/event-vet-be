"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const assertThat_1 = require("../../assertThat");
const Appender_1 = require("../Appender");
const SimpleTile_1 = require("./SimpleTile");
const ArrayTile_1 = require("./ArrayTile");
describe("ArrayTile", () => {
    it("Empty", () => {
        const arrayTile = new ArrayTile_1.ArrayTile([]);
        (0, assertThat_1.assertThat)(arrayTile).is({ elements: [], stringLength: 2, complexity: 2 });
        (0, assertThat_1.assertThat)(Appender_1.Appender.composeLength(arrayTile)).is(2);
    });
    it("One element", () => {
        const tile = new SimpleTile_1.SimpleTile("hello");
        const arrayTile = new ArrayTile_1.ArrayTile([tile]);
        (0, assertThat_1.assertThat)(Appender_1.Appender.composeLength(arrayTile)).is(7);
        (0, assertThat_1.assertThat)(arrayTile).is({ elements: [tile], stringLength: 7, complexity: 3 });
    });
    it("Three elements", () => {
        const tile1 = new SimpleTile_1.SimpleTile("hello");
        const tile2 = new SimpleTile_1.SimpleTile("there");
        const tile3 = new SimpleTile_1.SimpleTile("hi");
        const arrayTile = new ArrayTile_1.ArrayTile([tile1, tile2, tile3]);
        (0, assertThat_1.assertThat)(Appender_1.Appender.composeLength(arrayTile)).is(18);
        (0, assertThat_1.assertThat)(arrayTile).is({ elements: [tile1, tile2, tile3], stringLength: 18, complexity: 5 });
    });
});
//# sourceMappingURL=ArrayTile.micro.js.map