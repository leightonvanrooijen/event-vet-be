import { SelfReferenceChecker } from "./SelfReferenceChecker";
import { DiffMatcher } from "../matcher/DiffMatcher";
export declare const defaultLineWidth = 80;
export declare const defaultMaxComplexity = 30;
export declare const defaultMaxTilesCount = 10000;
export declare class PrettyPrinter {
    private lineWidth;
    private maxComplexity;
    private maxTilesCount;
    static symbolForPseudoCall: symbol;
    static symbolForMockName: any | undefined;
    private static customPrettyPrinters;
    selfReference: SelfReferenceChecker;
    tilesCount: number;
    private constructor();
    static addCustomPrettyPrinter(matcher: DiffMatcher<any>, toString: (t: any) => string): void;
    static make(lineWidth?: number, maxComplexity?: number, maxTilesCount?: number, symbolForMockName?: any): PrettyPrinter;
    static isMock(value: any): boolean;
    static logToConsole(value: any): void;
    static logStackToConsole(): void;
    static functionDetails(fn: Function): {
        function: string;
        arrow?: undefined;
    } | {
        arrow: string;
        function?: undefined;
    };
    render(value: any): string;
    logToConsole(value: any): void;
    private tile;
    private tileObject;
}
export declare function cleanString(value: string): string;
export declare const exceptionMessage: (e: any) => string;
