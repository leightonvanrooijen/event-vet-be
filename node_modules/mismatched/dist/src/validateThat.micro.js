"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const assertThat_1 = require("./assertThat");
const match_1 = require("./match");
const validateThat_1 = require("./validateThat");
const passed = (result) => (0, assertThat_1.assertThat)(result.passed()).is(true);
const errors = (result, errors) => (0, assertThat_1.assertThat)(result.errors).is(errors);
describe("validateThat():", () => {
    it("Simple value:", () => {
        const actual = 3.4;
        passed((0, validateThat_1.validateThat)(actual).satisfies(actual));
        errors((0, validateThat_1.validateThat)(3.4).satisfies(3.5), ["{actual: 3.4, expected: 3.5}"]);
    });
    it("Object:", () => {
        passed((0, validateThat_1.validateThat)({ f: 1, g: 2 }).satisfies({ f: 1, g: 2 }));
        errors((0, validateThat_1.validateThat)({ f: 1, g: 2 }).satisfies({ f: 1 }), ["{actual: {f: 1, g: 2}, unexpected: {g: 2}}"]);
    });
    it("not:", () => {
        passed((0, validateThat_1.validateThat)(true).satisfies(match_1.match.not(false)));
        errors((0, validateThat_1.validateThat)(true).satisfies(match_1.match.not(true)), ["{actual: true, expected: {not: true}}"]);
    });
    it("anyOf():", () => {
        passed((0, validateThat_1.validateThat)(new Date()).satisfies(match_1.match.anyOf([3, match_1.match.instanceOf(Date)])));
        errors((0, validateThat_1.validateThat)(true).satisfies(match_1.match.anyOf([3, match_1.match.instanceOf(Date)])), ['{actual: true, expected: {anyOf: [3, {instanceOf: "Date"}]}}']);
    });
    it("allOf():", () => {
        passed((0, validateThat_1.validateThat)(3).satisfies(match_1.match.allOf([3, match_1.match.number.greater(2)])));
        errors((0, validateThat_1.validateThat)(2).satisfies(match_1.match.allOf([2, match_1.match.number.greater(2)])), ['{actual: 2, expected: {"number.greater": 2}}']);
    });
});
//# sourceMappingURL=validateThat.micro.js.map