"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.stringDiff = exports.differ = void 0;
const Colour_1 = require("../Colour");
const diff = require("fast-array-diff");
const differ = (deltas, result, testing = false) => {
    let offset = 0;
    deltas.forEach(delta => {
        switch (delta.type) {
            case "add":
                const insert = add(delta.items.join(""), testing);
                result.splice(delta.oldPos + offset, 0, insert);
                offset += 1;
                break;
            case "remove":
                const start = delta.oldPos + offset;
                const removed = result.splice(start, delta.items.length).join('');
                result.splice(start, 0, minus(removed, testing));
                offset += 1 - delta.items.length;
                break;
        }
    });
    return result.join("");
};
exports.differ = differ;
const add = (s, testing) => testing ? "(" + s + ")" : extraColour(s);
const minus = (s, testing) => testing ? "[" + s + "]" : missingColour(s);
const extraColour = (s) => Colour_1.Colour.green(s);
const missingColour = (s) => Colour_1.Colour.red(s);
const getPatch = (expected, actual) => diff.getPatch(Array.from(actual), Array.from(expected), compare);
const patchDiffer = (expected, actual, testing = false) => {
    return (0, exports.differ)(getPatch(expected, actual), Array.from(actual), testing);
};
const lengths = (deltas) => {
    let totalAddLength = 0;
    let totalRemoveLength = 0;
    deltas.forEach(delta => {
        switch (delta.type) {
            case "add":
                totalAddLength += delta.items.length;
                break;
            case "remove":
                totalRemoveLength += delta.items.length;
                break;
        }
    });
    return { totalAddLength, totalRemoveLength };
};
const compare = (a, b) => a === b;
exports.stringDiff = {
    getPatch,
    differ: exports.differ,
    patchDiffer,
    lengths,
    extraColour,
    missingColour
};
//# sourceMappingURL=StringDiff.js.map